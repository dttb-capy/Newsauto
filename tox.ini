# Tox configuration for multi-environment testing

[tox]
envlist = py{310,311,312}, lint, type, security, docs
minversion = 4.0
isolated_build = True
skip_missing_interpreters = True

[testenv]
description = Run unit tests with pytest
deps =
    pytest>=7.0
    pytest-cov>=4.0
    pytest-asyncio>=0.21
    pytest-mock>=3.10
    pytest-timeout>=2.1
    -r{toxinidir}/requirements.txt

setenv =
    PYTHONPATH = {toxinidir}
    DATABASE_URL = sqlite:///./test.db
    TESTING = true
    OLLAMA_HOST = http://mock-ollama:11434

commands =
    pytest {posargs:tests/} \
        --cov=newsauto \
        --cov-report=term-missing \
        --cov-report=html \
        --cov-report=xml

[testenv:lint]
description = Run code linting
deps =
    black>=23.0
    ruff>=0.1
    isort>=5.12
    flake8>=6.0
    pylint>=3.0

commands =
    black --check newsauto/ tests/
    isort --check-only newsauto/ tests/
    ruff check newsauto/ tests/
    flake8 newsauto/ tests/
    pylint newsauto/

[testenv:type]
description = Run type checking with mypy
deps =
    mypy>=1.5
    types-requests
    types-pyyaml
    types-python-dateutil
    -r{toxinidir}/requirements.txt

commands =
    mypy newsauto/ --ignore-missing-imports

[testenv:security]
description = Run security checks
deps =
    bandit[toml]>=1.7
    safety>=2.3
    pip-audit>=2.6

commands =
    bandit -r newsauto/ -ll
    safety check --json
    pip-audit

[testenv:docs]
description = Build and check documentation
deps =
    sphinx>=7.0
    sphinx-rtd-theme>=1.3
    sphinx-autodoc-typehints>=1.24
    myst-parser>=2.0

commands =
    sphinx-build -W -b html docs/ docs/_build/html
    sphinx-build -W -b linkcheck docs/ docs/_build/linkcheck

[testenv:format]
description = Auto-format code
deps =
    black>=23.0
    isort>=5.12
    autoflake>=2.2

commands =
    autoflake --in-place --remove-all-unused-imports --remove-unused-variables --recursive newsauto/ tests/
    isort newsauto/ tests/
    black newsauto/ tests/

[testenv:integration]
description = Run integration tests
deps =
    {[testenv]deps}
    docker>=6.1
    httpx>=0.24

passenv =
    DOCKER_*
    CI

commands =
    pytest tests/test_newsletter_integration.py -v

[testenv:performance]
description = Run performance tests
deps =
    {[testenv]deps}
    pytest-benchmark>=4.0
    memory-profiler>=0.61
    locust>=2.17

commands =
    pytest tests/ --benchmark-only
    python -m memory_profiler scripts/test_newsletter_flow.py --quick

[testenv:clean]
description = Clean up temporary files
deps =
skip_install = True
commands =
    python -c "import shutil; shutil.rmtree('htmlcov', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('.coverage', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('.pytest_cache', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('.tox', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('dist', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('build', ignore_errors=True)"
    python -c "import os; [os.remove(f) for f in os.listdir('.') if f.endswith('.pyc')]"

[flake8]
max-line-length = 100
extend-ignore = E203, W503
exclude =
    .git,
    __pycache__,
    .tox,
    venv,
    .venv,
    build,
    dist,
    *.egg-info,
    migrations,
    .pytest_cache

[isort]
profile = black
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
ensure_newline_before_comments = True
line_length = 100

[bandit]
targets = newsauto
recursive = True
skip = B101,B601