name: Auto Label Issues

on:
  issues:
    types: [opened]

jobs:
  auto-label:
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Label by title patterns
        uses: actions/github-script@v7
        with:
          script: |
            const title = context.payload.issue.title.toLowerCase();
            const labels = [];

            // Feature area detection
            if (title.includes('llm') || title.includes('model') || title.includes('summarize')) {
              labels.push('llm');
            }
            if (title.includes('api') || title.includes('endpoint') || title.includes('rest')) {
              labels.push('api');
            }
            if (title.includes('scrape') || title.includes('fetch') || title.includes('content') || title.includes('rss')) {
              labels.push('content-pipeline');
            }
            if (title.includes('email') || title.includes('smtp') || title.includes('delivery')) {
              labels.push('email');
            }
            if (title.includes('dashboard') || title.includes('ui') || title.includes('frontend')) {
              labels.push('frontend');
            }
            if (title.includes('deploy') || title.includes('docker') || title.includes('cicd')) {
              labels.push('deployment');
            }
            if (title.includes('automation') || title.includes('schedule') || title.includes('workflow')) {
              labels.push('automation');
            }

            // Work type detection
            if (title.includes('bug') || title.includes('fix') || title.includes('error')) {
              labels.push('bug');
            }
            if (title.includes('docs') || title.includes('documentation')) {
              labels.push('documentation');
            }
            if (title.includes('performance') || title.includes('optimize') || title.includes('speed')) {
              labels.push('performance');
            }

            // Priority detection
            if (title.includes('critical') || title.includes('urgent') || title.includes('blocking')) {
              labels.push('priority:high');
            }

            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.issue.number,
                labels: labels
              });
            }
